Bootstrap:docker
From:ubuntu:bionic

%help
    Each section of the singularity file start with %
%labels
    Maintainer Coco l'asticot
    Version v1.1

%setup
# action to do outside the singularity image
# here I create a avocados.txt file
# command are linux based

touch avocados.txt


%files
# action to manage file as copy
    avocados.txt /tmp

%environment
TOOL_DIRECTORY="/tools"
FASTP_VER="0.23.2"
SHOVILL_VER="1.1.0"
SPADES_VER="3.15.5"
SEQTK_VER="1.3"
KMC_VER="3.1.1"
LIGHTER_VER="1.1.1"
TRIMMOMATIC_VER="0.39"
BWA_VER="0.7.17"
SAMTOOLS_VER="1.16.1"
SKESA_VER="2.3.0"
MEGAHIT_VER="1.1.4"
VELVET_VER="1.2.10"
FLASH_VER="1.2.11"
PILON_VER="1.24"

export PATH="${PATH}:\
${TOOL_DIRECTORY}/SPAdes-${SPADES_VER}-Linux/bin:\
${TOOL_DIRECTORY}/kmc:\
${TOOL_DIRECTORY}/Lighter-${LIGHTER_VER}:\
${TOOL_DIRECTORY}/trimmomatic:\
${TOOL_DIRECTORY}/bwa/bwa-${BWA_VER}:\
${TOOL_DIRECTORY}/skesa:\
${TOOL_DIRECTORY}/megahit/megahit_v${MEGAHIT_VER}_LINUX_CPUONLY_x86_64-bin:\
${TOOL_DIRECTORY}/velvet/velvet-${VELVET_VER}:\
${TOOL_DIRECTORY}/flash/FLASH-${FLASH_VER}:\
${TOOL_DIRECTORY}/shovill-${SHOVILL_VER}/bin:\
${TOOL_DIRECTORY}/pilon:\
${TOOL_DIRECTORY}/samclip:\
${TOOL_DIRECTORY}/fastp"
LC_ALL=C
export LC_ALL=C

%post

# some environment variable
# you can specify tool version to easily update the version after
TOOL_DIRECTORY="/tools"
FASTP_VER="0.23.2"
SHOVILL_VER="1.1.0"
SPADES_VER="3.15.5"
SEQTK_VER="1.3"
KMC_VER="3.1.1"
LIGHTER_VER="1.1.1"
TRIMMOMATIC_VER="0.39"
BWA_VER="0.7.17"
SAMTOOLS_VER="1.16.1"
SKESA_VER="2.3.0"
MEGAHIT_VER="1.1.4"
VELVET_VER="1.2.10"
FLASH_VER="1.2.11"
PILON_VER="1.24"

apt-get update && apt-get install -y --no-install-recommends \
  python \
  wget \
  ca-certificates \
  pigz \
  zlib1g-dev \
  make \
  gcc \
  g++ \
  libpthread-stubs0-dev \
  openjdk-11-jre \
  unzip \
  bzip2 \
  libncurses5-dev \
  libbz2-dev \
  liblzma-dev \
  libcurl4-gnutls-dev \
  libssl-dev \
  libfindbin-libs-perl && \
  apt-get clean && apt-get autoclean && \
  rm -rfv /var/lib/apt/lists/*

mkdir -v ${TOOL_DIRECTORY}
cd ${TOOL_DIRECTORY}

# SPAdes
wget https://github.com/ablab/spades/releases/download/v${SPADES_VER}/SPAdes-${SPADES_VER}-Linux.tar.gz && \
tar -xzf SPAdes-${SPADES_VER}-Linux.tar.gz && \
rm -v SPAdes-${SPADES_VER}-Linux.tar.gz

# Seqtk install
mkdir -v seqtk && \
cd seqtk && \
wget https://github.com/lh3/seqtk/archive/v${SEQTK_VER}.tar.gz && \
tar -zxf v${SEQTK_VER}.tar.gz && \
rm -v v${SEQTK_VER}.tar.gz && \
cd seqtk-${SEQTK_VER}/ && \
make && \
make install

cd ${TOOL_DIRECTORY}

# kmc
mkdir kmc && \
cd kmc && \
wget https://github.com/refresh-bio/KMC/releases/download/v${KMC_VER}/KMC${KMC_VER}.linux.tar.gz && \
tar -xzf KMC${KMC_VER}.linux.tar.gz && \
rm -v KMC${KMC_VER}.linux.tar.gz
cd ${TOOL_DIRECTORY}

# lighter
wget https://github.com/mourisl/Lighter/archive/v${LIGHTER_VER}.tar.gz && \
tar -zxf v${LIGHTER_VER}.tar.gz && \
rm -rvf v${LIGHTER_VER}.tar.gz && \
cd Lighter-${LIGHTER_VER} && \
make
cd ${TOOL_DIRECTORY}

# trimmomatic
mkdir trimmomatic && \
cd trimmomatic && \
wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-${TRIMMOMATIC_VER}.zip && \
unzip Trimmomatic-${TRIMMOMATIC_VER}.zip && \
rm -rf Trimmomatic-${TRIMMOMATIC_VER}.zip && \
chmod +x Trimmomatic-${TRIMMOMATIC_VER}/trimmomatic-${TRIMMOMATIC_VER}.jar && \
echo "#!/bin/bash" >> trimmomatic && \
echo "exec java -jar  ${TOOL_DIRECTORY}/trimmomatic/Trimmomatic-${TRIMMOMATIC_VER}/trimmomatic-${TRIMMOMATIC_VER}.jar """"$""@"""" " >> trimmomatic && \
chmod +x trimmomatic
cd ${TOOL_DIRECTORY}

# bwa (mem) install
mkdir bwa && \
cd bwa && \
wget https://github.com/lh3/bwa/releases/download/v${BWA_VER}/bwa-${BWA_VER}.tar.bz2 && \
tar -xjf bwa-${BWA_VER}.tar.bz2 && \
rm bwa-${BWA_VER}.tar.bz2 && \
cd bwa-${BWA_VER} && \
make
cd ${TOOL_DIRECTORY}

# samtools install
mkdir samtools && \
cd samtools && \
wget https://github.com/samtools/samtools/releases/download/${SAMTOOLS_VER}/samtools-${SAMTOOLS_VER}.tar.bz2 && \
tar -xjf samtools-${SAMTOOLS_VER}.tar.bz2 && \
rm samtools-${SAMTOOLS_VER}.tar.bz2 && \
cd samtools-${SAMTOOLS_VER} && \
./configure && \
make && \
make install
cd ${TOOL_DIRECTORY}

# skesa 2.3.0 binary (skesa 2.4.0 binary works better on ubuntu:bionic, so not upgrading here)
mkdir skesa && \
cd skesa && \
wget https://github.com/ncbi/SKESA/releases/download/v${SKESA_VER}/skesa.centos6.10 && \
mv skesa.centos6.10 skesa && \
chmod +x skesa
cd ${TOOL_DIRECTORY}

# MEGAHIT 1.1.4 binary (I'm pretty sure these are binaries at this point)
mkdir megahit && \
cd megahit && \
wget https://github.com/voutcn/megahit/releases/download/v${MEGAHIT_VER}/megahit_v${MEGAHIT_VER}_LINUX_CPUONLY_x86_64-bin.tar.gz && \
tar -xzf megahit_v${MEGAHIT_VER}_LINUX_CPUONLY_x86_64-bin.tar.gz && \
rm megahit_v${MEGAHIT_VER}_LINUX_CPUONLY_x86_64-bin.tar.gz

cd ${TOOL_DIRECTORY}

# Velvet 1.2.10
mkdir velvet && \
cd velvet && \
wget https://github.com/dzerbino/velvet/archive/v${VELVET_VER}.tar.gz && \
tar -xzf v${VELVET_VER}.tar.gz && \
rm -rf v${VELVET_VER}.tar.gz && \
cd velvet-${VELVET_VER} && \
make
cd ${TOOL_DIRECTORY}

# Flash 1.2.11
mkdir flash && \
cd flash && \
wget https://sourceforge.net/projects/flashpage/files/FLASH-${FLASH_VER}.tar.gz && \
tar -zxf FLASH-${FLASH_VER}.tar.gz && \
rm -rf FLASH-${FLASH_VER}.tar.gz && \
cd FLASH-${FLASH_VER} && \
make
cd ${TOOL_DIRECTORY}

# pilon
mkdir pilon && \
cd pilon && \
wget https://github.com/broadinstitute/pilon/releases/download/v${PILON_VER}/pilon-${PILON_VER}.jar && \
chmod +x pilon-${PILON_VER}.jar && \
echo "#!/bin/bash" >> pilon && \
echo "exec java -jar /pilon/pilon-${PILON_VER}.jar """"$""@"""" " >> pilon && \
chmod +x pilon
cd ${TOOL_DIRECTORY}

# Samclip (not going to pin a version, this is the recommended way of installing and there have not been updates since March 2020)
mkdir samclip && \
cd samclip && \
wget https://raw.githubusercontent.com/tseemann/samclip/master/samclip && \
chmod +x samclip
cd ${TOOL_DIRECTORY}

# aaannnddd finally install shovill v1.1.0 itself
 # extra perl module I had to install via apt-get: libfindbin-libs-perl
 # create /data for working directory
wget https://github.com/tseemann/shovill/archive/v${SHOVILL_VER}.tar.gz && \
tar -xzf v${SHOVILL_VER}.tar.gz && \
rm v${SHOVILL_VER}.tar.gz
cd ${TOOL_DIRECTORY}

##############################################################
####################     FASTP INSTALL     ###################
##############################################################

mkdir fastp && \
cd fastp && \
wget http://opengene.org/fastp/fastp.${FASTP_VER} && \
mv fastp.${FASTP_VER} fastp && \
chmod a+x ./fastp && \
cd ${TOOL_DIRECTORY}


%test
fastp --help
echo $PATH
