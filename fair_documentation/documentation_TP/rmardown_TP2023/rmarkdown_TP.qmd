---
title : "Création d'un rapport sous Rmarkdown / Quarto"
author : "Philippe Ruiz - Aubi"
editor : visual
---

## `Rmarkdown` et `Quarto`

`Rmarkdown` est un programme orienté `R` qui permet de produire des documents `Word`, `pdf` ou `html` directement sous `R` en incluant des résultats d'analyses qui s'executent lors de la création du document.

`Quarto` est la future génération de `Rmarkdown` qui se veut multi-language (`R`, `Python`, `Julia`, ...) et indépendant de `R`.

## Les dépendances

Sous `R` / `RStudio` le package `knitr` permettant la compilation du document doit être présent.

``` r
library(knitr)
```

`RStudio` permet de générer automatiquement un caneva de fichier `Rmardown` / `Quarto` : *File* \> *New File* \> *R Markdown*.

## Les différentes parties d'un document

### L'en-tête

Il s'agit de la section contenant toutes les informations générales permettant la construcion du document : Titre, auteur, date, format, style (css), ...

```markdown
---
title : "Création d'un rapport sous Rmarkdown / Quarto"
author : "Philippe Ruiz - Aubi"
date: "`r Sys.Date()`"
output : html_document 
---
```

### Le *chunck* (code source)

Le code a executer doit être encapsuler dans des balises. Celui-ci sera executé lors de la compilation du document :

````markdown
```{{r name, options}}
1 + 1
```
````

### Le texte

- Il est bien sur possible d'ajouter du texte entre chaque *chunk*, avec le format souhaité :
  - *italique* : *
  - **gras** : **
  - `code` : `
  - [liens](https://rmarkdown.rstudio.com/) : \[ \]\(  \)

- De gérer les titres, ...
````
# Titre 1

## Titre 2
````

- De gérer les équations, $E = mc^{2}$ : `$ $`

## Les analyses et leurs résulats

### Les figures

- Une figure générée par un *chunk* pourra être directment insérée dans le document :

````markdown
```{{r name, options}}
require(graphics)
data(airquality)
pairs(airquality, panel = panel.smooth, main = "airquality data")
```
````
```{r}
#| label: first
#| echo: false
require(graphics)
data(airquality)
pairs(airquality, panel = panel.smooth, main = "airquality data")
```

- Il est également possible d'insérer une figure enregistrer dans un fichier local en inserant directement un lien dans le document :

````markdown
![Figure 1](fig 2.png)
````

![Figure 1](fig 2.png)

### Les tableaux

Il est également possible d'afficher des tableaux générés avec `R` :

````markdown
```{{r}}
head(airquality)
```
````

```{r}
#| label: second
#| echo: false
head(airquality)
```

Le problème est que l'on obtient une sortie graphique de `R` qui n'est pas très
agréable. Pour améliorer ça il est nécessaire d'utiliser la fonction `kable` du package `knitr`.

````markdown
```{{r}}
require(knitr)
kable(head(airquality))
```
````

```{r}
#| label: third
#| echo: false
#| message: false
require(knitr)
kable(head(airquality))
```

## Les options avancés pour le documents

Il est possible de fournir des spécificités globales pour le document : format, 
affichage du code, présence d'une table des matières, taille des figures, style ...

Toutes ces informations sont a renseigner dans l'en-tête du document :

```markdown
---
title : "Création d'un rapport sous Rmarkdown / Quarto"
author : "Philippe Ruiz - Aubi"
date: "`r Sys.Date()`"
output : 
  html_document :
    css : style.css
    toc: true
    toc_float: true
    code_folding: hide
    fig_width: 14
    fig_height: 7
    fig_caption: true
---
```
